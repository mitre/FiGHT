image: python:3

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  GIT_SUBMODULE_STRATEGY: recursive
  RUNNER_TAG: docker

stages:
  - lint
  - sonar


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V
  - python -m venv venv
  - source venv/bin/activate
  - pip install -r tools/requirements.txt

lint yaml:
  stage: lint
  tags:
    - $RUNNER_TAG
  script:
    - pip install -r tests/requirements.txt
    - yamllint -c tests/.yamllint .
  rules:
    - changes:
        - "*.yaml"
        - "*.yml"

validate data:
  stage: lint
  tags:
    - $RUNNER_TAG
  script:
    - pip install -r tests/requirements.txt
    # Run tests with minimal console output, produce report, and fail on warnings
    - pytest --tb=line --junitxml=report.xml -W error::UserWarning
    - yamllint -c tests/.yamllint .
  artifacts:
    when: always
    reports:
      junit: report.xml
  rules:
    - changes:
        - data/*.yaml   # Source data was updated
        - tests/*.py    # Any tests changed
        - conftest.py   # Any test fixtures changed

# Checks that a generated ATLAS.yaml matches the one commited to this project.
# Fails if they are different, only runs on merge requests or protected branches
check FiGHT.yaml up-to-date:
  stage: lint
  tags:
    - $RUNNER_TAG
  script:
    - python tools/create_matrix.py
    - git diff --exit-code dist/ATLAS.yaml || exit_code=$?
    - if [[ $exit_code -ne 0 ]]; then echo 'Runner-generated dist/ATLAS.yaml is different from remote repository version - run tools/create_matrix.py to update and commit the result.'; exit 123; fi;
  rules:
    # Default branch, main, tags, and all types of merge request pipelines.
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: '$CI_COMMIT_BRANCH == "main"'

sonar_lint:
  stage: sonar
  tags:
    - $RUNNER_TAG
  image: sonarsource/sonar-scanner-cli
  script:
    - wget http://pki.mitre.org/MITRE%20BA%20NPE%20CA-3.crt -O /tmp/MITRE_BA_NPE_CA-3.crt
    - keytool -importcert -file /tmp/MITRE_BA_NPE_CA-3.crt -keypass changeit -keystore ${JAVA_HOME}/lib/security/cacerts -noprompt -storepass changeit
    - ls -al
    - cp -r . /usr/src/
    - sonar-scanner -Dsonar.projectKey=$SONAR_PROJECT_KEY -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.mitre.org -Dsonar.login=$SONAR_TOKEN

